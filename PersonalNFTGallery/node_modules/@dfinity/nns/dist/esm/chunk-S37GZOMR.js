import{b as n}from"./chunk-EDMSX7GK.js";var u=async({agent:s,canisterId:t,methodName:r,arg:a})=>{let e=await s.call(t,{methodName:r,arg:a,effectiveCanisterId:t});if(!e.response.ok)throw new Error(["Call failed:",`  Method: ${r}`,`  Canister ID: ${t}`,`  Request ID: ${e.requestId}`,`  HTTP status code: ${e.response.status}`,`  HTTP status text: ${e.response.statusText}`].join(`
`));let o=await n.pollForResponse(s,t,e.requestId,n.defaultStrategy());return new Uint8Array(o)},p=async({agent:s,canisterId:t,methodName:r,arg:a})=>{let e=await s.query(t,{methodName:r,arg:a});if(e.status=="rejected")throw new Error(["Call failed:",`  Method: ${r}`,`  Canister ID: ${t}`,`  HTTP status code: ${e.reject_code}`,`  HTTP status text: ${e.reject_message}`].join(`
`));return new Uint8Array(e.reply.arg)};export{u as a,p as b};
//# sourceMappingURL=chunk-S37GZOMR.js.map
