{
  "version": 3,
  "sources": ["../../src/utils/proto.utils.ts"],
  "sourcesContent": ["import { Agent, polling } from \"@dfinity/agent\";\nimport { Principal } from \"@dfinity/principal\";\n\n/**\n * Submits an update call to the IC.\n * @returns The (binary) response if the request succeeded, an error otherwise.\n */\nexport const updateCall = async ({\n  agent,\n  canisterId,\n  methodName,\n  arg,\n}: {\n  agent: Agent;\n  canisterId: Principal;\n  methodName: string;\n  arg: ArrayBuffer;\n}): Promise<Uint8Array> => {\n  const submitResponse = await agent.call(canisterId, {\n    methodName,\n    arg,\n    effectiveCanisterId: canisterId,\n  });\n\n  if (!submitResponse.response.ok) {\n    throw new Error(\n      [\n        \"Call failed:\",\n        `  Method: ${methodName}`,\n        `  Canister ID: ${canisterId}`,\n        `  Request ID: ${submitResponse.requestId}`,\n        `  HTTP status code: ${submitResponse.response.status}`,\n        `  HTTP status text: ${submitResponse.response.statusText}`,\n      ].join(\"\\n\")\n    );\n  }\n\n  const blob = await polling.pollForResponse(\n    agent,\n    canisterId,\n    submitResponse.requestId,\n    polling.defaultStrategy()\n  );\n\n  return new Uint8Array(blob);\n};\n\n/**\n * Submits a query call to the IC.\n * @returns The (binary) response if the request succeeded, an error otherwise.\n */\nexport const queryCall = async ({\n  agent,\n  canisterId,\n  methodName,\n  arg,\n}: {\n  agent: Agent;\n  canisterId: Principal;\n  methodName: string;\n  arg: ArrayBuffer;\n}): Promise<Uint8Array> => {\n  const queryResponse = await agent.query(canisterId, {\n    methodName,\n    arg,\n  });\n\n  if (queryResponse.status == \"rejected\") {\n    throw new Error(\n      [\n        \"Call failed:\",\n        `  Method: ${methodName}`,\n        `  Canister ID: ${canisterId}`,\n        `  HTTP status code: ${queryResponse.reject_code}`,\n        `  HTTP status text: ${queryResponse.reject_message}`,\n      ].join(\"\\n\")\n    );\n  }\n\n  return new Uint8Array(queryResponse.reply.arg);\n};\n"],
  "mappings": "wCAOO,GAAM,GAAa,MAAO,CAC/B,QACA,aACA,aACA,SAMyB,CACzB,GAAM,GAAiB,KAAM,GAAM,KAAK,EAAY,CAClD,aACA,MACA,oBAAqB,CACvB,CAAC,EAED,GAAI,CAAC,EAAe,SAAS,GAC3B,KAAM,IAAI,OACR,CACE,eACA,aAAa,IACb,kBAAkB,IAClB,iBAAiB,EAAe,YAChC,uBAAuB,EAAe,SAAS,SAC/C,uBAAuB,EAAe,SAAS,YACjD,EAAE,KAAK;AAAA,CAAI,CACb,EAGF,GAAM,GAAO,KAAM,GAAQ,gBACzB,EACA,EACA,EAAe,UACf,EAAQ,gBAAgB,CAC1B,EAEA,MAAO,IAAI,YAAW,CAAI,CAC5B,EAMa,EAAY,MAAO,CAC9B,QACA,aACA,aACA,SAMyB,CACzB,GAAM,GAAgB,KAAM,GAAM,MAAM,EAAY,CAClD,aACA,KACF,CAAC,EAED,GAAI,EAAc,QAAU,WAC1B,KAAM,IAAI,OACR,CACE,eACA,aAAa,IACb,kBAAkB,IAClB,uBAAuB,EAAc,cACrC,uBAAuB,EAAc,gBACvC,EAAE,KAAK;AAAA,CAAI,CACb,EAGF,MAAO,IAAI,YAAW,EAAc,MAAM,GAAG,CAC/C",
  "names": []
}
